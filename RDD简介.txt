RDD（弹性分布式数据库）是Spark计算的核心，可以看作是一个简单的数组，所有Spark进行的操作都是在RDD基础上完成的。
弹性指的是：
	（1）数据在节点中进行存储的时候可以使用内存，也可以使用磁盘。
	（2）具有很强的容错性，不会因为某个节点错误使得整个任务运行失败。不同节点中并法运行的数据，某一个节点发生错误时，会在不同的节点中进行重试。
	主要使用以下两种方法：
	（1）检查节点：对每个数据节点进行检测，随时了解运行情况，但对于分布式存储而言，节点的检测资源损耗大，出现错误时需要将数据在不同的节点之中进行搬运，降低执行效率。
	（2）更新记录：运行时主节点不会实时检查所有的分节点的运行状态，将相同的数据放在不同的多个节点之中进行保存，每个节点按固定的周期更新主节点中的运行记录。一定时间内主节点检查一次所有节点的状态，超时或异常时在存储相同数据的不同节点中重新进行计算。缺点在于数据量过大的时候，更新数据和重新启动任务的资源消耗很大。
完整的RDD执行过程：将数据分布存储在不同节点的计算机内存中进行存储，下一次需要利用数据进行执行时，直接从内存中进行数据获取。主要过程分为两个部分：transformation+action
transformation:使用多种方式（map filter join）等操作对RDD进行处理，RDD可以利用transformation生成新的RDD，但是不能真正运行。
action:对数据执行的部分，左右的操作都是lazy模式执行。

